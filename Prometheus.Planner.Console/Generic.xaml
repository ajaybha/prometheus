<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Prometeo.Planner.Console">
    <SolidColorBrush x:Key="BlueTheme" Color="#FF2B579A"/>
    <SolidColorBrush x:Key="AccentBlue" Color="#99225AB0"/>
    <SolidColorBrush x:Key="AccentViolet" Color="#99775AB0"/>
    <SolidColorBrush x:Key="LightBlue" Color="#192B579A"/>
    <SolidColorBrush x:Key="GrayTheme" Color="#FF444444" />

    <ControlTemplate x:Key="RedFlagPushPinTemplate">
        <Grid>
            <Ellipse Width="32" Height="32">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="/Prometheus.Planner.Console;component/Img\RedFlag.png" />
                </Ellipse.Fill>
            </Ellipse>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="FirePushPinTemplate">
        <Grid>
            <Ellipse Width="32" Height="32" Stroke="Black" StrokeThickness="1" Fill="White" />
            <Ellipse Width="32" Height="32">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="/Prometheus.Planner.Console;component/Img\FireAlert.png" />
                </Ellipse.Fill>
            </Ellipse>
        </Grid>
    </ControlTemplate>

    <Style x:Key="BlueNotesText" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="BlueThemeStandardWindows" TargetType="{x:Type Window}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="FontFamily" Value="Segoe UI Light" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Background="White">
                        <Rectangle Margin="0,0,0,0" Fill="{StaticResource LightBlue}" Height="53" VerticalAlignment="Bottom"/>
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlueButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Background="{DynamicResource AccentBlue}" BorderBrush="{DynamicResource AccentBlue}">
                        <TextBlock Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"><InlineUIContainer>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </InlineUIContainer></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AccentBlue }"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource AccentBlue }"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="LightGray" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlueH1" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource BlueTheme}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>